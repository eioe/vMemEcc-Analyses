factor) %>%
mutate_at(vars(c_ResponseCorrect,
c_Change,
c_Response),
as.logical) %>%
drop_na(c_Response) %>%
mutate(c_ResponseCorrect = (c_Response == c_Change))
wd = here('../..')
wd
current_machine == "DESKTOP-7DGG1KH"
if (current_machine == "DESKTOP-7DGG1KH") {
wd = file.path('S:', 'Meine Bibliotheken', 'Experiments', 'vMemEcc')
} else {
wd = here('../..')
print(wd)
}
wd
d2Path <- file.path(wd, "Data/SubjectData/")
IDs <- list.files(d2Path, pattern = 'VME')
IDs
for (ID in IDs) {
for (cond in list('S001', 'S002')) {
fname <- 'trial_results.csv'
fpath <- file.path(d2Path, ID, 'Unity', cond, fname)
if (!file.exists(fpath)) next
dat <- read_csv(fpath)
dat$c_Response <- as.logical(dat$c_Response)
fulldat <- bind_rows(fulldat, dat)
}
}
? saveRDS
# set data choices:
write_fulldat_to_disk <- TRUE
if (write_fulldat_to_disk) {
fname <- file.path(path_r_data, 'fulldat_behav.rds')
saveRDS(fulldat, fname)
}
path_r_data <- file.path(wd, 'Data/DataR')
if (write_fulldat_to_disk) {
fname <- file.path(path_r_data, 'fulldat_behav.rds')
saveRDS(fulldat, fname)
}
? readRDS
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(Hmisc)
library(here)
source(here("Utils", "wrangle_data.R"))
source(here("Utils", "plot_behavior.R"))
# set data choices:
write_fulldat_to_disk <- FALSE
get_fulldat_from_disk <- TRUE
# If were on my laptop, get data from virtual drive:
current_machine = Sys.info()['nodename']
if (current_machine == "DESKTOP-7DGG1KH") {
wd = file.path('S:', 'Meine Bibliotheken', 'Experiments', 'vMemEcc')
} else {
wd = here('../..')
}
# Need if you want to read in raw data:
path_subject_data <- file.path(wd, "Data/SubjectData/")
# Needed if you read RDS data from disk:
path_r_data <- file.path(wd, 'Data/DataR')
if (get_fulldat_from_disk) {
fname <- file.path(path_r_data, 'fulldat_behav.rds')
fulldat <- readRDS(fname)
} else {
IDs <- list.files(path_subject_data, pattern = 'VME')
fulldat <- NULL
for (ID in IDs) {
for (cond in list('S001', 'S002')) {
fname <- 'trial_results.csv'
fpath <- file.path(d2Path, ID, 'Unity', cond, fname)
if (!file.exists(fpath)) next
dat <- read_csv(fpath)
dat$c_Response <- as.logical(dat$c_Response)
fulldat <- bind_rows(fulldat, dat)
}
}
}
if (write_fulldat_to_disk) {
fname <- file.path(path_r_data, 'fulldat_behav.rds')
saveRDS(fulldat, fname)
}
# excluded subjects:
excl_subs <- c('VME_S11', 'VME_S14', 'VME_S19')
# and restructure it:
fulldat <- fulldat %>%
filter(! ppid %in% excl_subs) %>%
mutate_at(vars(ppid,
c_Ecc,
c_CortMag,
c_StimN
),
factor) %>%
mutate_at(vars(c_ResponseCorrect,
c_Change,
c_Response),
as.logical) %>%
drop_na(c_Response) %>%
mutate(c_ResponseCorrect = (c_Response == c_Change))
sumstat <- fulldat %>%
filter(BlockStyle %in% c('experiment')) %>%
group_by(c_StimN, c_Ecc, ppid) %>%
summarise(mean_acc = mean(c_ResponseCorrect))
## Mauchly test for sphericity:
wf <- sumstat %>% select(ppid, c_Ecc, mean_acc, c_StimN) %>%
pivot_wider(names_from = c(c_Ecc), values_from = mean_acc) %>%
select('4', '9', '14')
acc <- tibble(.rows = length(levels(sumstat$ppid)))
i <- 0
#for (aa in levels(sumstat$c_StimN)) {
for (bb in levels(sumstat$c_Ecc)) {
i = i+1
dd <- sumstat$mean_acc[sumstat$c_Ecc == bb & sumstat$c_StimN == aa]
acc[, i] <- dd
}
# set data choices:
write_fulldat_to_disk <- FALSE
get_fulldat_from_disk <- TRUE
# If were on my laptop, get data from virtual drive:
current_machine = Sys.info()['nodename']
if (current_machine == "DESKTOP-7DGG1KH") {
wd = file.path('S:', 'Meine Bibliotheken', 'Experiments', 'vMemEcc')
} else {
wd = here('../..')
}
# Need if you want to read in raw data:
path_subject_data <- file.path(wd, "Data/SubjectData/")
# Needed if you read RDS data from disk:
path_r_data <- file.path(wd, 'Data/DataR')
if (get_fulldat_from_disk) {
fname <- file.path(path_r_data, 'fulldat_behav.rds')
fulldat <- readRDS(fname)
} else {
IDs <- list.files(path_subject_data, pattern = 'VME')
fulldat <- NULL
for (ID in IDs) {
for (cond in list('S001', 'S002')) {
fname <- 'trial_results.csv'
fpath <- file.path(d2Path, ID, 'Unity', cond, fname)
if (!file.exists(fpath)) next
dat <- read_csv(fpath)
dat$c_Response <- as.logical(dat$c_Response)
fulldat <- bind_rows(fulldat, dat)
}
}
}
if (write_fulldat_to_disk) {
fname <- file.path(path_r_data, 'fulldat_behav.rds')
saveRDS(fulldat, fname)
}
# excluded subjects:
excl_subs <- c('VME_S11', 'VME_S14', 'VME_S19')
# and restructure it:
fulldat <- fulldat %>%
filter(! ppid %in% excl_subs) %>%
mutate_at(vars(ppid,
c_Ecc,
c_CortMag,
c_StimN
),
factor) %>%
mutate_at(vars(c_ResponseCorrect,
c_Change,
c_Response),
as.logical) %>%
drop_na(c_Response) %>%
mutate(c_ResponseCorrect = (c_Response == c_Change))
sumstat <- fulldat %>%
filter(BlockStyle %in% c('experiment')) %>%
group_by(c_StimN, c_Ecc, ppid) %>%
summarise(mean_acc = mean(c_ResponseCorrect))
bxp <- ggboxplot(
sumstat, x = "c_Ecc", y = "mean_acc",
color = "c_StimN", palette = "jco"
)
library(tidyverse)
library(Hmisc)
library(here)
library(ggpubr)
source(here("Utils", "wrangle_data.R"))
source(here("Utils", "plot_behavior.R"))
# set data choices:
write_fulldat_to_disk <- FALSE
get_fulldat_from_disk <- TRUE
# If were on my laptop, get data from virtual drive:
current_machine = Sys.info()['nodename']
if (current_machine == "DESKTOP-7DGG1KH") {
wd = file.path('S:', 'Meine Bibliotheken', 'Experiments', 'vMemEcc')
} else {
wd = here('../..')
}
# Need if you want to read in raw data:
path_subject_data <- file.path(wd, "Data/SubjectData/")
# Needed if you read RDS data from disk:
path_r_data <- file.path(wd, 'Data/DataR')
if (get_fulldat_from_disk) {
fname <- file.path(path_r_data, 'fulldat_behav.rds')
fulldat <- readRDS(fname)
} else {
IDs <- list.files(path_subject_data, pattern = 'VME')
fulldat <- NULL
for (ID in IDs) {
for (cond in list('S001', 'S002')) {
fname <- 'trial_results.csv'
fpath <- file.path(d2Path, ID, 'Unity', cond, fname)
if (!file.exists(fpath)) next
dat <- read_csv(fpath)
dat$c_Response <- as.logical(dat$c_Response)
fulldat <- bind_rows(fulldat, dat)
}
}
}
if (write_fulldat_to_disk) {
fname <- file.path(path_r_data, 'fulldat_behav.rds')
saveRDS(fulldat, fname)
}
# excluded subjects:
excl_subs <- c('VME_S11', 'VME_S14', 'VME_S19')
# and restructure it:
fulldat <- fulldat %>%
filter(! ppid %in% excl_subs) %>%
mutate_at(vars(ppid,
c_Ecc,
c_CortMag,
c_StimN
),
factor) %>%
mutate_at(vars(c_ResponseCorrect,
c_Change,
c_Response),
as.logical) %>%
drop_na(c_Response) %>%
mutate(c_ResponseCorrect = (c_Response == c_Change))
sumstat <- fulldat %>%
filter(BlockStyle %in% c('experiment')) %>%
group_by(c_StimN, c_Ecc, ppid) %>%
summarise(mean_acc = mean(c_ResponseCorrect))
bxp <- ggboxplot(
sumstat, x = "c_Ecc", y = "mean_acc",
color = "c_StimN", palette = "jco"
)
bxp
ggqqplot(sumstat, "mean_acc", ggtheme = theme_bw()) +
facet_grid(c_Ecc ~ c_StimN, labeller = "label_both")
sumstat %>%
group_by(c_StimN, c_Ecc) %>%
shapiro_test(mean_acc)
library(tidyverse)
library(here)
library(Hmisc)
library(ggpubr)
library(rstatix)
source(here("Utils", "wrangle_data.R"))
source(here("Utils", "plot_behavior.R"))
# set data choices:
write_fulldat_to_disk <- FALSE
get_fulldat_from_disk <- TRUE
# If were on my laptop, get data from virtual drive:
current_machine = Sys.info()['nodename']
if (current_machine == "DESKTOP-7DGG1KH") {
wd = file.path('S:', 'Meine Bibliotheken', 'Experiments', 'vMemEcc')
} else {
wd = here('../..')
}
# Need if you want to read in raw data:
path_subject_data <- file.path(wd, "Data/SubjectData/")
# Needed if you read RDS data from disk:
path_r_data <- file.path(wd, 'Data/DataR')
if (get_fulldat_from_disk) {
fname <- file.path(path_r_data, 'fulldat_behav.rds')
fulldat <- readRDS(fname)
} else {
IDs <- list.files(path_subject_data, pattern = 'VME')
fulldat <- NULL
for (ID in IDs) {
for (cond in list('S001', 'S002')) {
fname <- 'trial_results.csv'
fpath <- file.path(d2Path, ID, 'Unity', cond, fname)
if (!file.exists(fpath)) next
dat <- read_csv(fpath)
dat$c_Response <- as.logical(dat$c_Response)
fulldat <- bind_rows(fulldat, dat)
}
}
}
if (write_fulldat_to_disk) {
fname <- file.path(path_r_data, 'fulldat_behav.rds')
saveRDS(fulldat, fname)
}
# excluded subjects:
excl_subs <- c('VME_S11', 'VME_S14', 'VME_S19')
# and restructure it:
fulldat <- fulldat %>%
filter(! ppid %in% excl_subs) %>%
mutate_at(vars(ppid,
c_Ecc,
c_CortMag,
c_StimN
),
factor) %>%
mutate_at(vars(c_ResponseCorrect,
c_Change,
c_Response),
as.logical) %>%
drop_na(c_Response) %>%
mutate(c_ResponseCorrect = (c_Response == c_Change))
sumstat <- fulldat %>%
filter(BlockStyle %in% c('experiment')) %>%
group_by(c_StimN, c_Ecc, ppid) %>%
summarise(mean_acc = mean(c_ResponseCorrect))
bxp <- ggboxplot(
sumstat, x = "c_Ecc", y = "mean_acc",
color = "c_StimN", palette = "jco"
)
bxp
ggqqplot(sumstat, "mean_acc", ggtheme = theme_bw()) +
facet_grid(c_Ecc ~ c_StimN, labeller = "label_both")
sumstat %>%
group_by(c_StimN, c_Ecc) %>%
shapiro_test(mean_acc)
aov.res <- anova_test(data = ungroup(sumstat),
dv = mean_acc,
wid = ppid,
within = c(c_StimN, c_Ecc))
aov.res
get_anova_table(aov.res)
sumstat %>%
ungroup() %>%
pairwise_t_test(
mean_acc ~ c_Ecc, paired = TRUE,
p.adjust.method = "bonferroni"
)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(here)
library(Hmisc)
library(ggpubr)
library(rstatix)
source(here("Utils", "wrangle_data.R"))
getwd()
source(here("Utils", "wrangle_data.R"))
library(tidyverse)
library(here)
library(Hmisc)
library(ggpubr)
library(rstatix)
source(here("Utils", "wrangle_data.R"))
getwd()
source(here("Utils", "wrangle_data.R"))
source(here("Utils", "plot_behavior.R"))
here()
library(tidyverse)
library(here)
library(Hmisc)
library(ggpubr)
library(rstatix)
source(here("Utils", "wrangle_data.R"))
source(here("Utils", "plot_behavior.R"))
knitr::opts_chunk$set(echo = TRUE)
# set data choices:
write_fulldat_to_disk <- FALSE
get_fulldat_from_disk <- TRUE
# If were on my laptop, get data from virtual drive:
current_machine = Sys.info()['nodename']
if (current_machine == "DESKTOP-7DGG1KH") {
wd = file.path('S:', 'Meine Bibliotheken', 'Experiments', 'vMemEcc')
} else {
wd = here('../..')
}
# Need if you want to read in raw data:
path_subject_data <- file.path(wd, "Data/SubjectData/")
# Needed if you read RDS data from disk:
path_r_data <- file.path(wd, 'Data/DataR')
if (get_fulldat_from_disk) {
fname <- file.path(path_r_data, 'fulldat_behav.rds')
fulldat <- readRDS(fname)
} else {
IDs <- list.files(path_subject_data, pattern = 'VME')
fulldat <- NULL
for (ID in IDs) {
for (cond in list('S001', 'S002')) {
fname <- 'trial_results.csv'
fpath <- file.path(d2Path, ID, 'Unity', cond, fname)
if (!file.exists(fpath)) next
dat <- read_csv(fpath)
dat$c_Response <- as.logical(dat$c_Response)
fulldat <- bind_rows(fulldat, dat)
}
}
}
if (write_fulldat_to_disk) {
fname <- file.path(path_r_data, 'fulldat_behav.rds')
saveRDS(fulldat, fname)
}
# excluded subjects:
excl_subs <- c('VME_S11', 'VME_S14', 'VME_S19')
# and restructure it:
fulldat <- fulldat %>%
filter(! ppid %in% excl_subs) %>%
mutate_at(vars(ppid,
c_Ecc,
c_CortMag,
c_StimN
),
factor) %>%
mutate_at(vars(c_ResponseCorrect,
c_Change,
c_Response),
as.logical) %>%
drop_na(c_Response) %>%
mutate(c_ResponseCorrect = (c_Response == c_Change))
sumstat_RT <- fulldat %>%
filter(BlockStyle %in% c('experiment')) %>%
group_by(c_StimN, c_Ecc, c_ResponseCorrect, ppid) %>%
summarise(mean_RT = mean(c_ResponseTime))
aov.res <- anova_test(data = ungroup(sumstat),
dv = mean_RT,
wid = ppid,
within = c(c_StimN, c_Ecc, c_ResponseCorrect))
aov.res <- anova_test(data = ungroup(sumstat_RT),
dv = mean_RT,
wid = ppid,
within = c(c_StimN, c_Ecc, c_ResponseCorrect))
aov.res
get_anova_table(aov.res)
aov.res
get_anova_table(aov.res)
sumstat %>%
ungroup() %>%
pairwise_t_test(
mean_acc ~ c_Ecc, paired = TRUE,
p.adjust.method = "bonferroni"
)
sumstat_RT %>%
ungroup() %>%
pairwise_t_test(
mean_acc ~ c_Ecc, paired = TRUE,
p.adjust.method = "bonferroni"
)
sumstat_RT %>%
ungroup() %>%
pairwise_t_test(
mean_RT ~ c_ResponseCorrect, paired = TRUE,
p.adjust.method = "bonferroni"
)
bxp <- ggboxplot(
sumstat, x = "c_ResponseCorrect", y = "mean_RT",
color = "c_StimN", palette = "jco"
)
bxp <- ggboxplot(
sumstat_RT, x = "c_ResponseCorrect", y = "mean_RT",
color = "c_StimN", palette = "jco"
)
bxp
sumstat_RT <- fulldat %>%
filter(BlockStyle %in% c('experiment'),
c_ResponseTime < 3) %>%
group_by(c_StimN, c_Ecc, c_ResponseCorrect, ppid) %>%
summarise(mean_RT = mean(c_ResponseTime))
aov.res <- anova_test(data = ungroup(sumstat_RT),
dv = mean_RT,
wid = ppid,
within = c(c_StimN, c_Ecc, c_ResponseCorrect))
aov.res
get_anova_table(aov.res)
bxp <- ggboxplot(
sumstat_RT, x = "c_ResponseCorrect", y = "mean_RT",
color = "c_StimN", palette = "jco"
)
bxp
bxp <- ggboxplot(
sumstat_RT, x = c("c_ResponseCorrect", "c_Ecc"), y = "mean_RT",
color = "c_StimN", palette = "jco"
)
bxp
bxp <- ggboxplot(
sumstat_RT, x = "c_ResponseCorrect", y = "mean_RT",
color = c("c_StimN", "c_Ecc"), palette = "jco"
)
bxp <- ggboxplot(
sumstat_RT, x = "c_ResponseCorrect", y = "mean_RT",
color = c("c_Ecc"), palette = "jco"
)
bxp
bxp <- ggboxplot(
sumstat_RT, x = c("c_ResponseCorrect", "c_StimN"), y = "mean_RT",
color = c("c_Ecc"), palette = "jco"
)
bxp
plot_performance(fulldat, "experiment")
source(here("Utils", "plot_behavior.R"))
plot_performance(fulldat, "experiment")
source(here("Utils", "plot_behavior.R"))
plot_performance(fulldat, "experiment")
source(here("Utils", "plot_behavior.R"))
plot_performance(fulldat, "experiment")
source(here("Utils", "plot_behavior.R"))
plot_performance(fulldat, "experiment")
source(here("Utils", "plot_behavior.R"))
plot_performance(fulldat, "experiment")
source(here("Utils", "plot_behavior.R"))
plot_performance(fulldat, "experiment")
source(here("Utils", "plot_behavior.R"))
plot_performance(fulldat, "experiment")
source(here("Utils", "plot_behavior.R"))
plot_performance(fulldat, "experiment")
source(here("Utils", "plot_behavior.R"))
plot_performance(fulldat, "experiment")
source(here("Utils", "plot_behavior.R"))
plot_performance(fulldat, "experiment")
