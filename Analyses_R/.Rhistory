cor(x_dif, timings_eye0$sample_dist, use = "complete")
mean(x_dif[idx_outliers_larger_10ms])
mean(x_dif)
mean(x_dif, na.rm = T)
t.test(x_dif[idx_outliers_larger_10ms], x_dif)
sample(x_dif, 5)
mean(sample(x_dif, 400), na.rm = T)
mean(sample(abs(x_dif), 400), na.rm = T)
mean(abs(x_dif[idx_outliers_larger_10ms]))
idx_outliers_larger_10ms <- which(timings_eye0$sample_dist > 0.04)
sum(idx_outliers_larger_10ms)
max(timings_eye0$sample_dist)
max(timings_eye0$sample_dist, na.rm = T)
idx_outliers_larger_10ms <- which(timings_eye0$sample_dist > 0.015)
sum(idx_outliers_larger_10ms)
mean(abs(x_dif[idx_outliers_larger_10ms]))
idx_outliers_larger_10ms <- which(timings_eye0$sample_dist > 0.01)
mean(abs(x_dif[idx_outliers_larger_10ms - 1]))
mean(abs(x_dif[idx_outliers_larger_10ms - 2]))
mean(abs(x_dif[idx_outliers_larger_10ms - 3]))
mean(abs(x_dif[idx_outliers_larger_10ms + 3]))
mean(abs(x_dif[idx_outliers_larger_10ms + 2]))
mean(abs(x_dif[idx_outliers_larger_10ms + 1]))
mean(abs(x_dif[idx_outliers_larger_10ms + 0]))
t.test(x_dif[idx_outliers_larger_10ms + 2], x_dif)
t.test(abs(x_dif[idx_outliers_larger_10ms + 2]), abs(x_dif))
t.test(abs(x_dif[idx_outliers_larger_10ms - 2]), abs(x_dif))
t.test(abs(x_dif[idx_outliers_larger_10ms - 1]), abs(x_dif))
t.test(abs(x_dif[idx_outliers_larger_10ms - 3]), abs(x_dif))
t.test(abs(x_dif[idx_outliers_larger_10ms + 3]), abs(x_dif))
t.test(abs(x_dif[idx_outliers_larger_10ms + 1]), abs(x_dif))
plot(x_dif[1000:1200])
plot(x_dif[1000:12000])
plot(x_dif[1000:120000])
plot(timings_eye0$gaze_normal0_x[1000:12000])
plot(timings_eye0$gaze_normal0_x[1000:1200])
plot(timings_eye0$gaze_normal0_x[1000:12000])
plot(timings_eye0$gaze_normal0_x[1000:18000])
plot(timings_eye0$gaze_normal0_x[1000:180000])
plot(timings_eye0$gaze_normal0_x[1000:18000])
idx_m <- x_dif > 0.001
length(idx_m)
length(x_dif)
mean(x_dif)
mean(x_dif, na.rm = T)
sum(idx_m)
sum(idx_m, na.rm = T)
idx_m <- x_dif > 0.01
sum(idx_m, na.rm = T)
idx_m
which(idx_m, na.rm = T)
which(idx_m)
idx_outliers_larger_10ms <- which(timings_eye0$sample_dist > 0.01)
idx_outliers_larger_10ms
mean(timings_eye0$sample_dist[idx_m], na.rm = T)
mean(timings_eye0$sample_dist, na.rm = T)
t.test(timings_eye0$sample_dist[idx_m] timings_eye0$sample_dist, na.rm = T)
t.test(timings_eye0$sample_dist[idx_m], timings_eye0$sample_dist, na.rm = T)
timings_eye0$sample_dist[idx_m]
timings_eye0$sample_dist[idx_m] > 0.01
sum(timings_eye0$sample_dist[idx_m] > 0.01)
sum(timings_eye0$sample_dist[idx_m] > 0.01, na.rm = T)
iidx <- timings_eye0$sample_dist[idx_m] > 0.01
mean(x_dif[idx_m][iidx])
mean(x_dif[idx_m][iidx], na.rm = T)
x_dif[idx_m][iidx]
mean(x_dif[idx_m], na.rm = T)
mean(abs(x_dif[idx_m][iidx]), na.rm = T)
mean(abs(x_dif[idx_m]), na.rm = T)
summary(timings_eye0$sample_dist)
prop_outliers_larger_10ms <- sum(timings_eye0$sample_dist > 0.01, na.rm = T)/nrow(timings_eye1)
idx_outliers_larger_10ms <- which(timings_eye0$sample_dist > 0.01)
plot(1:89, as_vector(timings_eye0[(idx_outliers_larger_10ms[15]-44):(idx_outliers_larger_10ms[15]+44),6]))
plot(1:89, as_vector(timings_eye0[(idx_outliers_larger_10ms[15]-44):(idx_outliers_larger_10ms[15]+44),4]))
lines(c(45, 45), c(-100, 100))
lines(c(25, 25), c(-100, 100))
idx_outliers_larger_10ms <- which(timings_eye0$sample_dist > 0.01)
steps <- -3:3
sdists <- list()
for (step in steps) {
sdists[[step]] <- timings_eye0$sample_dist[idx_outliers_larger_10ms + step]
}
idx_outliers_larger_10ms + step
idx_outliers_larger_10ms
sdists[[step]] <-
timings_eye0$sample_dist[idx_outliers_larger_10ms + step]
sdists[[step]] <- timings_eye0[idx_outliers_larger_10ms + step, 'sample_dist']
ha <-
idx_outliers_larger_10ms + step
class(ha)
ha
timings_eye0[ha, 3]
timings_eye0[ha, 'sample_dist']
sdists[[step]] <- timings_eye0[(idx_outliers_larger_10ms + step), 'sample_dist']
sdists[[step]] <-
timings_eye0[(idx_outliers_larger_10ms + step), 'sample_dist']
step
sdists[[as.character(step)]] <- timings_eye0[(idx_outliers_larger_10ms + step), 'sample_dist']
# indices of frames with sample distance >10 ms (see above): idx_outliers_larger_10ms
# Let's look at the sample distances before and after these frames:
steps <- -3:3
sdists <- list()
for (step in steps) {
sdists[[as.character(step)]] <- timings_eye0[(idx_outliers_larger_10ms + step), 'sample_dist']
}
df_sdist <- bind_rows(sdists, .id = "step")
View(df_sdist)
library(tidyverse)
df_sdist <- bind_rows(sdists, .id = "step") %>%  mutate(as.integer(step))
df_sdist <- bind_rows(sdists, .id = "step") %>%  mutate(as.integer(step))
df_sdist <- bind_rows(sdists, .id = "step") %>%  mutate(step = as.integer(step))
ggplot(df_sdist, aes(x = step, y = sample_dist)) +
geom_boxplot()
df_sdist <- bind_rows(sdists, .id = "step") %>%
mutate(step = as.integer(step)) %>%
group_by(step)
ggplot(df_sdist, aes(x = step, y = sample_dist)) +
geom_boxplot()
ggplot(df_sdist, aes(x = step, y = sample_dist)) +
geom_boxplot(by = step)
? geom_boxplot
View(df_sdist)
ggplot(df_sdist, aes(x = step, y = sample_dist)) +
geom_boxplot()
df_sdist <- bind_rows(sdists, .id = "step") %>%
mutate(step = as.factor(step)) %>%
group_by(step)
ggplot(df_sdist, aes(x = step, y = sample_dist)) +
geom_boxplot()
# Let's look at the sample distances before and after these frames:
steps <- -8:8
sdists <- list()
for (step in steps) {
sdists[[as.character(step)]] <- timings_eye0[(idx_outliers_larger_10ms + step), 'sample_dist']
}
df_sdist <- bind_rows(sdists, .id = "step") %>%
mutate(step = as.factor(step)) %>%
group_by(step)
ggplot(df_sdist, aes(x = step, y = sample_dist)) +
geom_boxplot()
# Let's look at the sample distances before and after these frames:
steps <- -5:5
sdists <- list()
for (step in steps) {
sdists[[as.character(step)]] <- timings_eye0[(idx_outliers_larger_10ms + step), 'sample_dist']
}
df_sdist <- bind_rows(sdists, .id = "step") %>%
mutate(step = as.factor(step)) %>%
group_by(step)
ggplot(df_sdist, aes(x = step, y = sample_dist)) +
geom_boxplot()
# indices of frames with sample distance >10 ms (see above): idx_outliers_larger_10ms
# Let's look at the sample distances before and after these frames:
steps <- -5:5
sdists <- list()
for (step in steps) {
sdists[[as.character(step)]] <- timings_eye0[(idx_outliers_larger_10ms + step), 'sample_dist']
}
df_sdist <- bind_rows(sdists, .id = "step") %>%
mutate(step = as.factor(step)) %>%
group_by(step) %>%
ggplot(aes(x = step, y = sample_dist)) +
geom_boxplot()
df_sdist <- bind_rows(sdists, .id = "step") %>%
mutate(step = as.factor(step)) %>%
group_by(step) %>%
ggplot(aes(x = step, y = sample_dist)) +
geom_boxplot() %>%  plot()
df_sdist <- bind_rows(sdists, .id = "step") %>%
mutate(step = as.factor(step)) %>%
group_by(step) %>%
ggplot(aes(x = step, y = sample_dist)) +
geom_boxplot() %>%  ggplot()
df_sdist <- bind_rows(sdists, .id = "step") %>%
mutate(step = as.factor(step)) %>%
group_by(step) %>%
ggplot(aes(x = step, y = sample_dist)) +
geom_boxplot() %>%  shpw()
plot(sf_dist)
df_sdist <- bind_rows(sdists, .id = "step") %>%
mutate(step = as.factor(step)) %>%
group_by(step) %>%
ggplot(aes(x = step, y = sample_dist)) +
geom_boxplot()
plot(df_dist)
plot(df_sdist)
df_sdist <- bind_rows(sdists, .id = "step") %>%
mutate(step = as.factor(step)) %>%
group_by(step) %>%
ggplot(aes(x = step, y = sample_dist)) +
geom_boxplot() %>%  show()
ggplot(df_sdist, aes(x = step, y = sample_dist)) +
geom_boxplot()
# indices of frames with sample distance >10 ms (see above): idx_outliers_larger_10ms
# Let's look at the sample distances before and after these frames:
steps <- -5:5
sdists <- list()
for (step in steps) {
sdists[[as.character(step)]] <- timings_eye0[(idx_outliers_larger_10ms + step), 'sample_dist']
}
df_sdist <- bind_rows(sdists, .id = "step") %>%
mutate(step = as.factor(step)) %>%
group_by(step)
ggplot(df_sdist, aes(x = step, y = sample_dist)) +
geom_boxplot()
# indices of frames with sample distance >10 ms (see above): idx_outliers_larger_10ms
idx_outliers_larger_10ms <- which(timings_eye0$sample_dist > 0.015)
steps <- -5:5
sdists <- list()
for (step in steps) {
sdists[[as.character(step)]] <- timings_eye0[(idx_outliers_larger_10ms + step), 'sample_dist']
}
df_sdist <- bind_rows(sdists, .id = "step") %>%
mutate(step = as.factor(step)) %>%
group_by(step)
ggplot(df_sdist, aes(x = step, y = sample_dist)) +
geom_boxplot()
# indices of frames with sample distance >10 ms (see above): idx_outliers_larger_10ms
idx_outliers_larger_10ms <- which(timings_eye0$sample_dist > 0.015)
# Let's look at the sample distances before and after these frames:
steps <- -15:15
sdists <- list()
for (step in steps) {
sdists[[as.character(step)]] <- timings_eye0[(idx_outliers_larger_10ms + step), 'sample_dist']
}
df_sdist <- bind_rows(sdists, .id = "step") %>%
mutate(step = as.factor(step)) %>%
group_by(step)
ggplot(df_sdist, aes(x = step, y = sample_dist)) +
geom_boxplot()
# indices of frames with sample distance >10 ms (see above): idx_outliers_larger_10ms
idx_outliers_larger_10ms <- which(timings_eye0$sample_dist > 0.015)
# Let's look at the sample distances before and after these frames:
steps <- -50:50
sdists <- list()
for (step in steps) {
sdists[[as.character(step)]] <- timings_eye0[(idx_outliers_larger_10ms + step), 'sample_dist']
}
# indices of frames with sample distance >10 ms (see above): idx_outliers_larger_10ms
idx_outliers_larger_10ms <- which(timings_eye0$sample_dist > 0.015)
# Let's look at the sample distances before and after these frames:
steps <- -35:35
sdists <- list()
for (step in steps) {
sdists[[as.character(step)]] <- timings_eye0[(idx_outliers_larger_10ms + step), 'sample_dist']
}
df_sdist <- bind_rows(sdists, .id = "step") %>%
mutate(step = as.factor(step)) %>%
group_by(step)
ggplot(df_sdist, aes(x = step, y = sample_dist)) +
geom_boxplot()
ggplot(df_sdist, aes(x = step, y = sample_dist)) +
geom_boxplot()
# indices of frames with sample distance >10 ms (see above): idx_outliers_larger_10ms
idx_outliers_larger_10ms <- which(timings_eye0$sample_dist > 0.015)
# Let's look at the sample distances before and after these frames:
steps <- -35:35
sdists <- list()
for (step in steps) {
sdists[[as.character(step)]] <- timings_eye0[(idx_outliers_larger_10ms + step), 'sample_dist']
}
df_sdist <- bind_rows(sdists, .id = "step") %>%
mutate(step = as.factor(as.integer(step))) %>%
group_by(step)
ggplot(df_sdist, aes(x = step, y = sample_dist)) +
geom_boxplot()
# indices of frames with sample distance >10 ms (see above): idx_outliers_larger_10ms
idx_outliers_larger_10ms <- which(timings_eye0$sample_dist > 0.015)
# Let's look at the sample distances before and after these frames:
steps <- -35:35
sdists <- list()
for (step in steps) {
sdists[[as.character(step)]] <- timings_eye0[(idx_outliers_larger_10ms + step), 'sample_dist']
}
df_sdist <- bind_rows(sdists, .id = "step") %>%
mutate(step = as.factor(as.integer(step))) %>%
group_by(step)
ggplot(df_sdist, aes(x = step, y = sample_dist)) +
geom_boxplot()
ggplot(df_sdist, aes(x = step, y = sample_dist)) +
geom_boxplot()
# indices of frames with sample distance >10 ms (see above): idx_outliers_larger_10ms
idx_outliers_larger_10ms <- which(timings_eye0$sample_dist > 0.02)
# indices of frames with sample distance >10 ms (see above): idx_outliers_larger_10ms
idx_outliers_larger_10ms <- which(timings_eye0$sample_dist > 0.02)
# Let's look at the sample distances before and after these frames:
steps <- -35:35
sdists <- list()
for (step in steps) {
sdists[[as.character(step)]] <- timings_eye0[(idx_outliers_larger_10ms + step), 'sample_dist']
}
df_sdist <- bind_rows(sdists, .id = "step") %>%
mutate(step = as.factor(as.integer(step))) %>%
group_by(step)
ggplot(df_sdist, aes(x = step, y = sample_dist)) +
geom_boxplot()
# indices of frames with sample distance >10 ms (see above): idx_outliers_larger_10ms
idx_outliers_larger_10ms <- which(timings_eye0$sample_dist > 0.01)
# Let's look at the sample distances before and after these frames:
steps <- -35:35
sdists <- list()
for (step in steps) {
sdists[[as.character(step)]] <- timings_eye0[(idx_outliers_larger_10ms + step), 'sample_dist']
}
df_sdist <- bind_rows(sdists, .id = "step") %>%
mutate(step = as.factor(as.integer(step))) %>%
group_by(step)
ggplot(df_sdist, aes(x = step, y = sample_dist)) +
geom_boxplot()
ggplot(df_sdist, aes(x = step, y = sample_dist)) +
geom_boxplot()
idx_outliers_larger_10ms <- sample(1:42970, 400)
steps <- -35:35
sdists <- list()
for (step in steps) {
sdists[[as.character(step)]] <- timings_eye0[(idx_outliers_larger_10ms + step), 'sample_dist']
}
df_sdist <- bind_rows(sdists, .id = "step") %>%
mutate(step = as.factor(as.integer(step))) %>%
group_by(step)
ggplot(df_sdist, aes(x = step, y = sample_dist)) +
geom_boxplot()
ggplot(df_sdist, aes(x = step, y = sample_dist)) +
geom_boxplot()
# indices of frames with sample distance >10 ms (see above): idx_outliers_larger_10ms
idx_outliers_larger_10ms <- which(timings_eye0$sample_dist > 0.01)
# Let's look at the sample distances before and after these frames:
steps <- -35:35
sdists <- list()
for (step in steps) {
sdists[[as.character(step)]] <- timings_eye0[(idx_outliers_larger_10ms + step), 'sample_dist']
}
df_sdist <- bind_rows(sdists, .id = "step") %>%
mutate(step = as.factor(as.integer(step))) %>%
group_by(step)
ggplot(df_sdist, aes(x = step, y = sample_dist)) +
geom_boxplot()
format(0.001)
str_remove("0.001", "0.")
str_remove("0.001", "0")
library(here)
library(tidyverse)
library(magrittr)
library(usethis)
library(zoo)
source("EyeTracking/MS_Toolbox_R/vecvel.R")
source("EyeTracking/MS_Toolbox_R/microsacc.R")
source("EyeTracking/MS_Toolbox_R/binsacc.R")
path_data <- here('../../Data/SubjectData/VME_S23/EyeTracking/Block7/000/exports/000')
data_annot  <- read_csv(file.path(path_data, 'annotations.csv'))
data_gaze   <- read_csv(file.path(path_data, 'gaze_positions.csv '))
data_blinks <- read_csv(file.path(path_data, 'blinks.csv'))
data_pupils <- read_csv(file.path(path_data, 'pupil_positions.csv'))
timings <- list(
'fix' = 0.8,
'cue' = 0.8,
'stim' = 0.2,
'retention' = 2,
'buffer_prefix' = 0.4,
'buffer_postretention' = 0.4)
get_blink_frames <- function(df_blink) {
dd <- df_blink %>%
group_by(n = row_number()) %>%
do(data.frame(blink_frames = seq(from = .$start_frame_index, to = .$end_frame_index))) %>%
ungroup() %>%
dplyr::select(blink_frames) %>%
as_vector()
return(dd)
}
# filter out annotation info re. the trial type:
data_trialtype <- data_annot %>%
mutate(ttype = parse_number(label) - 150) %>%
filter(ttype < 24 & ttype >= 0) #%>%
# filter out annotations for stim onsets:
data_stimon <- data_annot %>%
mutate(ttype = parse_number(label)) %>%
filter(ttype == 2)
# in case of aborted trials these DFs might have different lengths and need repair:
if (nrow(data_trialtype) > nrow(data_stimon)) {
# check for subsequent rows in data_trialtype with same ttype:
n_rows <- nrow(data_trialtype)
dbl_idx <- which(data_trialtype$ttype[1 : n_rows-1] == data_trialtype$ttype[2 : n_rows])
# now check for all candidates whether there was a stimulus onset between these two trial starts
# (if there was not, then this was an aborted and repeated trial)
idx_kickme <- vector(length = 0)
for (ii in dbl_idx) {
val <- (any(data_stimon$timestamp > data_trialtype$timestamp[ii] & data_stimon$timestamp < data_trialtype$timestamp[ii+1]))
if (!val) {
idx_kickme <- append(idx_kickme, ii)
}
}
# clean data_trialtype:
data_trialtype <- data_trialtype[-idx_kickme, ]
}
# Add the ttype info to the stimonset df:
data_stimon <- data_stimon %>%
mutate(ttype       = data_trialtype$ttype,
CueDir      = ifelse(mod(ttype, 2) < 1, 'Left', 'Right'),
ChangeTrial = ifelse(mod(ttype, 4) < 2, TRUE, FALSE),
c_StimN     = ifelse(mod(ttype, 8) < 4, 2, 4),
c_Ecc       = ifelse(mod(ttype, 24) < 8,
4,
ifelse(mod(ttype, 24) > 15,
14,
9)))
# read blink frames from pupil player export:
blink_frames <- get_blink_frames(data_blinks)
# translate gaze info into dva:
data_gaze <- data_gaze %>%
# first calculate a vector per eye from its center to the pos of the
# fixation cross (in camera space): (0,0,1000)[mm]
mutate(fvec0_x = 0 - eye_center0_3d_x,
fvec0_y = 0 - eye_center0_3d_y,
fvec0_z = 1000 - eye_center0_3d_z,
fvec1_x = 0 - eye_center1_3d_x,
fvec1_y = 0 - eye_center1_3d_y,
fvec1_z = 1000 - eye_center1_3d_z) %>%
mutate(f_vecnorm0 = Map(function(...) set_names(nrm(c(...)), c('x', 'y', 'z')),
fvec0_x, fvec0_y, fvec0_z)) %>%
unnest_wider(f_vecnorm0, names_sep = '_')
nrm <- function(x) {x / sqrt(sum(x^2))}
library(here)
library(tidyverse)
library(magrittr)
library(usethis)
library(zoo)
source("EyeTracking/MS_Toolbox_R/vecvel.R")
source("EyeTracking/MS_Toolbox_R/microsacc.R")
source("EyeTracking/MS_Toolbox_R/binsacc.R")
path_data <- here('../../Data/SubjectData/VME_S23/EyeTracking/Block7/000/exports/000')
data_annot  <- read_csv(file.path(path_data, 'annotations.csv'))
data_gaze   <- read_csv(file.path(path_data, 'gaze_positions.csv '))
data_blinks <- read_csv(file.path(path_data, 'blinks.csv'))
data_pupils <- read_csv(file.path(path_data, 'pupil_positions.csv'))
timings <- list(
'fix' = 0.8,
'cue' = 0.8,
'stim' = 0.2,
'retention' = 2,
'buffer_prefix' = 0.4,
'buffer_postretention' = 0.4)
get_blink_frames <- function(df_blink) {
dd <- df_blink %>%
group_by(n = row_number()) %>%
do(data.frame(blink_frames = seq(from = .$start_frame_index, to = .$end_frame_index))) %>%
ungroup() %>%
dplyr::select(blink_frames) %>%
as_vector()
return(dd)
}
# filter out annotation info re. the trial type:
data_trialtype <- data_annot %>%
mutate(ttype = parse_number(label) - 150) %>%
filter(ttype < 24 & ttype >= 0) #%>%
# filter out annotations for stim onsets:
data_stimon <- data_annot %>%
mutate(ttype = parse_number(label)) %>%
filter(ttype == 2)
# in case of aborted trials these DFs might have different lengths and need repair:
if (nrow(data_trialtype) > nrow(data_stimon)) {
# check for subsequent rows in data_trialtype with same ttype:
n_rows <- nrow(data_trialtype)
dbl_idx <- which(data_trialtype$ttype[1 : n_rows-1] == data_trialtype$ttype[2 : n_rows])
# now check for all candidates whether there was a stimulus onset between these two trial starts
# (if there was not, then this was an aborted and repeated trial)
idx_kickme <- vector(length = 0)
for (ii in dbl_idx) {
val <- (any(data_stimon$timestamp > data_trialtype$timestamp[ii] & data_stimon$timestamp < data_trialtype$timestamp[ii+1]))
if (!val) {
idx_kickme <- append(idx_kickme, ii)
}
}
# clean data_trialtype:
data_trialtype <- data_trialtype[-idx_kickme, ]
}
# Add the ttype info to the stimonset df:
data_stimon <- data_stimon %>%
mutate(ttype       = data_trialtype$ttype,
CueDir      = ifelse(mod(ttype, 2) < 1, 'Left', 'Right'),
ChangeTrial = ifelse(mod(ttype, 4) < 2, TRUE, FALSE),
c_StimN     = ifelse(mod(ttype, 8) < 4, 2, 4),
c_Ecc       = ifelse(mod(ttype, 24) < 8,
4,
ifelse(mod(ttype, 24) > 15,
14,
9)))
# read blink frames from pupil player export:
blink_frames <- get_blink_frames(data_blinks)
# translate gaze info into dva:
data_gaze <- data_gaze %>%
# first calculate a vector per eye from its center to the pos of the
# fixation cross (in camera space): (0,0,1000)[mm]
mutate(fvec0_x = 0 - eye_center0_3d_x,
fvec0_y = 0 - eye_center0_3d_y,
fvec0_z = 1000 - eye_center0_3d_z,
fvec1_x = 0 - eye_center1_3d_x,
fvec1_y = 0 - eye_center1_3d_y,
fvec1_z = 1000 - eye_center1_3d_z) %>%
mutate(f_vecnorm0 = Map(function(...) set_names(nrm(c(...)), c('x', 'y', 'z')),
fvec0_x, fvec0_y, fvec0_z)) %>%
unnest_wider(f_vecnorm0, names_sep = '_')
#path_data <- here('../../Data/SubjectData/VME_S23/EyeTracking/Block7/000/exports/000')
path_data <- here('../../Data/SubjectData/VME_S23/EyeTracking/Block7/000/exports/000')
library(here)
library(tidyverse)
library(magrittr)
library(usethis)
library(ggpubr)
library(zoo)
source("EyeTracking/MS_Toolbox_R/vecvel.R")
source("EyeTracking/MS_Toolbox_R/microsacc.R")
source('C:/Users/Felix/Downloads/ET_rejTrials/analyze_gaze.R', echo=TRUE)
